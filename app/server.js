/* eslint-disable no-console */
const compression = require('compression');
const express = require('express');
const nextjs = require('next');
const dotenv = require('dotenv');
const favicon = require('serve-favicon');

// Import variables from local .env file.
dotenv.config();

const port = process.env.PORT || 3000;
const dev = process.env.NODE_ENV !== 'production';
const app = nextjs({ dev });

app
  .prepare()
  .then(() => {
    // Initialize express.js server.
    const expressServer = express();

    // Serve gzipped content where possible.
    expressServer.use(compression());

    // Special handling of favicon in the app root.
    expressServer.use(favicon(`${__dirname}/static/favicon.ico`));

    // Set browser caching for all static files of the app.
    expressServer.use('/static', express.static(`${__dirname}/static`, {
      maxAge: '7d',
    }));

    // Set browser caching for all static files generated by Next.js.
    expressServer.use('/_next/static', express.static(`${__dirname}/.next/static`, {
      maxAge: '7d',
    }));

    // Handle all other requests.
    // TODO: Need to implement routing.
    expressServer.get('*', (req, res) => app.render(req, res, '/index'));

    expressServer.listen(port, (err) => {
      if (err) throw err;
      console.log('> Application is ready to serve!');
    });
  })
  .catch(err => console.error(err));
